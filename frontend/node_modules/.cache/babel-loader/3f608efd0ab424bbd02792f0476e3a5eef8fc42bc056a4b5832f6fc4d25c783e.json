{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Andy\\\\Desktop\\\\react-django-crud\\\\frontend\\\\src\\\\components\\\\TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  onSubmit,\n  initialTask,\n  onCancel\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [completed, setCompleted] = useState(false);\n  const [errors, setErrors] = useState({\n    title: \"\"\n  });\n  useEffect(() => {\n    if (initialTask) {\n      setTitle(initialTask.title);\n      setDescription(initialTask.description || \"\");\n      setCompleted(initialTask.completed);\n    } else {\n      resetForm();\n    }\n  }, [initialTask]);\n  const resetForm = () => {\n    setTitle(\"\");\n    setDescription(\"\");\n    setCompleted(false);\n    setErrors({\n      title: \"\"\n    });\n  };\n  const validateForm = () => {\n    const newErrors = {\n      title: \"\"\n    };\n    let isValid = true;\n    if (!title.trim()) {\n      newErrors.title = \"Title is required\";\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    const taskData = {\n      ...(initialTask && {\n        id: initialTask.id\n      }),\n      title,\n      description,\n      completed\n    };\n    onSubmit(taskData);\n    if (!initialTask) {\n      resetForm();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: initialTask ? \"Edit Task\" : \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Enter task title\",\n          className: errors.title ? \"error\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: errors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Enter task description\",\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"completed\",\n          type: \"checkbox\",\n          checked: completed,\n          onChange: e => setCompleted(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"completed\",\n          children: \"Mark as completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [initialTask && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: initialTask ? \"Update Task\" : \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"zdfZm3Iwt/UfxWXSh/KaZvevvoo=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","jsxDEV","_jsxDEV","TaskForm","onSubmit","initialTask","onCancel","title","setTitle","description","setDescription","completed","setCompleted","errors","setErrors","resetForm","validateForm","newErrors","isValid","trim","handleSubmit","e","preventDefault","taskData","id","className","children","fileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","placeholder","rows","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Andy/Desktop/react-django-crud/frontend/src/components/TaskForm.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\n\r\nfunction TaskForm({ onSubmit, initialTask, onCancel }) {\r\n  const [title, setTitle] = useState(\"\")\r\n  const [description, setDescription] = useState(\"\")\r\n  const [completed, setCompleted] = useState(false)\r\n  const [errors, setErrors] = useState({ title: \"\" })\r\n\r\n  useEffect(() => {\r\n    if (initialTask) {\r\n      setTitle(initialTask.title)\r\n      setDescription(initialTask.description || \"\")\r\n      setCompleted(initialTask.completed)\r\n    } else {\r\n      resetForm()\r\n    }\r\n  }, [initialTask])\r\n\r\n  const resetForm = () => {\r\n    setTitle(\"\")\r\n    setDescription(\"\")\r\n    setCompleted(false)\r\n    setErrors({ title: \"\" })\r\n  }\r\n\r\n  const validateForm = () => {\r\n    const newErrors = { title: \"\" }\r\n    let isValid = true\r\n\r\n    if (!title.trim()) {\r\n      newErrors.title = \"Title is required\"\r\n      isValid = false\r\n    }\r\n\r\n    setErrors(newErrors)\r\n    return isValid\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!validateForm()) return\r\n\r\n    const taskData = {\r\n      ...(initialTask && { id: initialTask.id }),\r\n      title,\r\n      description,\r\n      completed,\r\n    }\r\n\r\n    onSubmit(taskData)\r\n\r\n    if (!initialTask) {\r\n      resetForm()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card task-form\">\r\n      <div className=\"card-header\">\r\n        <h2>{initialTask ? \"Edit Task\" : \"Add New Task\"}</h2>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            placeholder=\"Enter task title\"\r\n            className={errors.title ? \"error\" : \"\"}\r\n          />\r\n          {errors.title && <p className=\"error-text\">{errors.title}</p>}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description (optional)</label>\r\n          <textarea\r\n            id=\"description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            placeholder=\"Enter task description\"\r\n            rows={3}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-check\">\r\n          <input id=\"completed\" type=\"checkbox\" checked={completed} onChange={(e) => setCompleted(e.target.checked)} />\r\n          <label htmlFor=\"completed\">Mark as completed</label>\r\n        </div>\r\n\r\n        <div className=\"form-actions\">\r\n          {initialTask && (\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onCancel}>\r\n              Cancel\r\n            </button>\r\n          )}\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            {initialTask ? \"Update Task\" : \"Add Task\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskForm\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}